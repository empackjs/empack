import{_ as t,c as a,o,ae as i}from"./chunks/framework.BG0qUWSs.js";const u=JSON.parse('{"title":"What is Empack","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/what-is-empack.md","filePath":"introduction/what-is-empack.md"}'),n={name:"introduction/what-is-empack.md"};function r(s,e,l,c,p,d){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="what-is-empack" tabindex="-1">What is Empack <a class="header-anchor" href="#what-is-empack" aria-label="Permalink to &quot;What is Empack&quot;">​</a></h1><p>Empack is a <strong>lightweight</strong>, <strong>Nest-like</strong> backend web framework built on top of <strong>Express</strong>. It aims to deliver a structured and scalable development experience while remaining simple and unobtrusive. Developers can focus on building business logic without getting bogged down by server configuration or boilerplate code.</p><p>Unlike NestJS, Empack focuses on minimalism and fast setup, making it ideal for small to medium-sized projects that value simplicity and flexibility.</p><p>Empack is fully compatible with the existing Express ecosystem, allowing you to use popular Express middleware, libraries, and tools out of the box.</p><p>It includes a built-in <strong>dependency injection (DI) container</strong> powered by <a href="https://github.com/inversify/InversifyJS" target="_blank" rel="noreferrer">Inversify</a>, <strong>route-based WebSocket support</strong>, a <strong>mediator pattern</strong> implementation for CQRS, and <strong>automatic OpenAPI documentation generation</strong>.</p><p>With <strong>TypeScript decorators</strong>, Empack simplifies the registration of controllers, routes, middleware, and more. Its built-in mediator allows for clean separation of concerns and full decoupling between controllers and business logic—making CQRS and modular architecture easy to adopt.</p>',6)]))}const g=t(n,[["render",r]]);export{u as __pageData,g as default};
